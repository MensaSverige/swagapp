name: Publish Docker Images

on:
  push:
    tags:
      - v*

jobs:
  prepare-data:
    runs-on: ubuntu-latest
    outputs:
      GIT_TAG: ${{ steps.generate-docker-tag.outputs.GIT_TAG }}
      DOCKER_TAG: ${{ steps.generate-docker-tag.outputs.DOCKER_TAG }}
      COMMIT_HASH: ${{ steps.generate-docker-tag.outputs.GIT_HASH }}
      COMMIT_MESSAGE: ${{ steps.last_commit.outputs.message }}
    steps:
      - name: Get Last Commit data
        id: last_commit
        run: |
          echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "sha=$(git log -1 --pretty=%H)" >> $GITHUB_OUTPUT

      - name: Generate Docker tag from release date and git commit hash
        id: generate-docker-tag
        run: |
          SHORT_SHA="$(echo $GITHUB_SHA | cut -c 1-7)"
          TAG_NAME="${GITHUB_REF##*/}"
          echo "GIT_TAG=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "DOCKER_TAG=$TAG_NAME.$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "GIT_HASH=$SHORT_SHA" >> $GITHUB_OUTPUT

  publish-android:
    needs: prepare-data
    uses: ./.github/workflows/publish-android.yml
    with:
      tag: ${{ needs.prepare-data.outputs.GIT_TAG }}
      version: ${{ needs.prepare-data.outputs.DOCKER_TAG }}
    secrets: inherit

  publish-website:
    needs: prepare-data
    uses: ./.github/workflows/publish-website.yml
    with:
      docker_tag: ${{ needs.prepare-data.outputs.DOCKER_TAG }}

  publish-backend:
    needs: prepare-data
    uses: ./.github/workflows/publish-backend.yml
    with:
      docker_tag: ${{ needs.prepare-data.outputs.DOCKER_TAG }}
      commit_message: ${{ needs.prepare-data.outputs.COMMIT_MESSAGE }}
      commit_hash: ${{ needs.prepare-data.outputs.COMMIT_HASH }}

  update-gitops:
    needs: [prepare-data, publish-website, publish-backend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout GitOps Repository
        uses: actions/checkout@v2
        with:
          repository: "gronitab/gronit-cluster1"
          token: ${{ secrets.PAT_FOR_K8S }}
          path: "gitops-repo"

      - name: Update Kubernetes Manifest Templates
        working-directory: gitops-repo/swag
        run: |
          for file in *.yaml.tpl; do
            sed "s/VERSION/${{ needs.prepare-data.outputs.DOCKER_TAG }}/" "$file" > "${file%.tpl}"
          done

      - name: Update Kubernetes Manifest repo
        working-directory: gitops-repo
        run: |
          git config --global user.name 'Mikael Gr√∂n'
          git config --global user.email 'skaramicke@gmail.com'
          git add swag/
          git commit -m "Update image tags for SWAG to ${{ needs.prepare-data.outputs.DOCKER_TAG }}" -m "${{ needs.prepare-data.outputs.COMMIT_MESSAGE }}"
          git push
