name: Build and Release Android App

on:
  workflow_dispatch:
    inputs:
      version:
          description: "Selected release version, for example 1.0.0"
          type: string
          required: true
  # workflow_call:
  #   inputs:
  #     tag:
  #       description: "Tag for finding release"
  #       required: true
  #       type: string
  #     version:
  #       required: true
  #       type: string

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    environment: Mensa-Dev
    steps:
      - name: Set build version
        run: echo "BUILD_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
      
      - name: Print run number
        run: echo Run number is ${{ github.run_number }}
        
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Decode Keystore
        working-directory: app/android
        env:
          ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          echo "$ANDROID_SIGNING_KEY" | base64 --decode > mensa-release-key.keystore
      
      - name: Create .env file
        working-directory: app
        run: |
          touch .env
          echo "API_URL=https://swag.mikael.green/api" >> .env
          echo "TEST_MODE=false" >> .env

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Yarn
        run: npm install -g yarn
        
      - name: Install dependencies with Yarn
        working-directory: app
        run: yarn install

      - name: Build Android signed aab
        working-directory: app/android
        env:
          ANDROID_SIGNING_KEY_PATH: ${{ github.workspace }}/app/android/mensa-release-key.keystore
          ANDROID_SIGNING_ALIAS: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          TRACK: internal
        run: |
          chmod +x ./gradlew
           ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$ANDROID_SIGNING_KEY_PATH -Pandroid.injected.signing.store.password=$ANDROID_SIGNING_STORE_PASSWORD -Pandroid.injected.signing.key.alias=$ANDROID_SIGNING_ALIAS -Pandroid.injected.signing.key.password=$ANDROID_SIGNING_STORE_PASSWORD -PversionName=${{ inputs.version }} -PpublishTrack=${{ env.TRACK }} -PversionCode=${{ github.run_number }}

      # - name: Upload AAB to release
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh release upload ${{ inputs.tag }} app/android/app/build/outputs/bundle/release/app-release.aab --clobber

      - name: Upload release bundle
        uses: actions/upload-artifact@v2
        with:
          name: app-release-bundle
          path: app/android/app/build/outputs/bundle/release/app-release.aab     

      # - name: Publish internal release to Google Play
      #   working-directory: app/android
      #   env:
      #     ANDROID_SIGNING_KEY_PATH: ${{ github.workspace }}/app/android/mensa-release-key.keystore
      #     ANDROID_SIGNING_ALIAS: ${{ secrets.ANDROID_SIGNING_ALIAS}}
      #     ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
      #     GOOGLE_CLOUD_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_JSON }}
      #     TRACK: internal
      #   run: |
      #     echo "$GOOGLE_CLOUD_SERVICE_ACCOUNT_JSON" > ./app/service-account.json
      #     chmod +x ./gradlew
      #     ./gradlew publishReleaseBundle -Pandroid.injected.signing.store.file=$ANDROID_SIGNING_KEY_PATH -Pandroid.injected.signing.store.password=$ANDROID_SIGNING_STORE_PASSWORD -Pandroid.injected.signing.key.alias=$ANDROID_SIGNING_ALIAS -Pandroid.injected.signing.key.password=$ANDROID_SIGNING_STORE_PASSWORD -PversionName=${{ inputs.version }} -PpublishTrack=${{ env.TRACK }} -PversionCode=${{ github.run_number }}
        
