name: Build and Release Android App

on:
  workflow_call:
    inputs:
      tag:
        description: "Tag for finding release"
        required: true
        type: string
      version:
        required: true
        type: string

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    environment: Mensa-Dev
    steps:
      - name: Set build version
        run: echo "BUILD_VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create .env file
        working-directory: app
        run: |
          touch .env
          echo "API_URL=https://swag.k.mikael.blue/api" >> .env
          echo "TEST_MODE=false" >> .env

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies with Yarn
        working-directory: app
        run: yarn install

      - name: Decode Keystore
        working-directory: app/android
        env:
          ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          echo "$ANDROID_SIGNING_KEY" | base64 --decode > my-release-key.keystore

      - name: Build Android App Bundle
        working-directory: app/android
        env:
          ANDROID_SIGNING_KEY_PATH: ${{ github.workspace }}/app/android/my-release-key.keystore
          KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$ANDROID_SIGNING_KEY_PATH -Pandroid.injected.signing.store.password=$STORE_PASSWORD -Pandroid.injected.signing.key.alias=$KEY_ALIAS -Pandroid.injected.signing.key.password=$KEY_PASSWORD -PversionName=${{ inputs.version }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/android/app/build/outputs/apk/release/app-release.apk

      - name: upload apk to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ inputs.tag }} app/android/app/build/outputs/apk/release/app-release.apk --clobber
