/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/authm": {
    /** Authm */
    post: operations["authm_v1_authm_post"];
  };
  "/v1/refresh_token": {
    /** Refresh Token */
    post: operations["refresh_token_v1_refresh_token_post"];
  };
  "/v1/health": {
    /** Health */
    get: operations["health_v1_health_get"];
  };
  "/v1/users/{user_id}": {
    /** Get User By Id */
    get: operations["get_user_by_id_v1_users__user_id__get"];
  };
  "/v1/users": {
    /** Get Users */
    get: operations["get_users_v1_users_get"];
  };
  "/v1/users/me/location": {
    /** Update User Location */
    put: operations["update_user_location_v1_users_me_location_put"];
  };
  "/v1/users/me/": {
    /** Get Current User */
    get: operations["get_current_user_v1_users_me__get"];
  };
  "/v1/users/me": {
    /** Update Current User */
    put: operations["update_current_user_v1_users_me_put"];
  };
  "/v1/external_events": {
    /** Get Events For User */
    get: operations["get_events_for_user_v1_external_events_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AuthRequest */
    AuthRequest: {
      /** Username */
      username: string;
      /** Password */
      password: string;
    };
    /** AuthResponse */
    AuthResponse: {
      /** Accesstoken */
      accessToken: string;
      /** Refreshtoken */
      refreshToken: string;
      /**
       * Accesstokenexpiry
       * Format: date-time
       */
      accessTokenExpiry: string;
      user: components["schemas"]["User"];
    };
    /** ContactInfo */
    ContactInfo: {
      /**
       * Email
       * @example johndoe@example.com
       */
      email?: string | null;
      /**
       * Phone
       * @example +1234567890
       */
      phone?: string | null;
    };
    /** ExternalEvent */
    ExternalEvent: {
      /** Eventid */
      eventId: number;
      /**
       * Date
       * Format: date
       */
      date: string;
      /**
       * Time
       * Format: time
       */
      time: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * ShowLocation
     * @enum {string}
     */
    ShowLocation: "NO_ONE" | "ALL_MEMBERS_WHO_SHARE_THEIR_OWN_LOCATION" | "ALL_MEMBERS" | "EVERYONE_WHO_SHARE_THEIR_OWN_LOCATION" | "EVERYONE";
    /** User */
    User: {
      /**
       * Userid
       * @example 123
       */
      userId: number;
      /**
       * Ismember
       * @default false
       * @example true
       */
      isMember?: boolean;
      settings: components["schemas"]["UserSettings"];
      /**
       * @example {
       *   "accuracy": 10,
       *   "latitude": 37.7749,
       *   "longitude": -122.4194,
       *   "timestamp": "2021-01-01"
       * }
       */
      location?: components["schemas"]["UserLocation"] | null;
      /**
       * @example {
       *   "email": "johndoe@example.com",
       *   "phone": "+1234567890"
       * }
       */
      contact_info?: components["schemas"]["ContactInfo"] | null;
      /**
       * Age
       * @example 30
       */
      age?: number | null;
      /**
       * Slogan
       * @example Live and Let Live
       */
      slogan?: string | null;
      /**
       * Avatar Url
       * @example https://example.com/avatar.jpg
       */
      avatar_url?: string | null;
      /**
       * Firstname
       * @example John Doe
       */
      firstName?: string | null;
      /**
       * Lastname
       * @example John Doe
       */
      lastName?: string | null;
    };
    /** UserLocation */
    UserLocation: {
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      /** Timestamp */
      timestamp: string | null;
      /** Accuracy */
      accuracy: number;
    };
    /** UserSettings */
    UserSettings: {
      /**
       * @default NO_ONE
       * @example EVERYONE
       */
      show_location?: components["schemas"]["ShowLocation"];
      /**
       * Show Email
       * @default false
       * @example true
       */
      show_email?: boolean;
      /**
       * Show Phone
       * @default false
       * @example true
       */
      show_phone?: boolean;
    };
    /** UserUpdate */
    UserUpdate: {
      settings: components["schemas"]["UserSettings"];
      /**
       * @example {
       *   "email": "johndoe@example.com",
       *   "phone": "+1234567890"
       * }
       */
      contact_info?: components["schemas"]["ContactInfo"] | null;
      /**
       * Slogan
       * @example Live and Let Live
       */
      slogan?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Authm */
  authm_v1_authm_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Refresh Token */
  refresh_token_v1_refresh_token_post: {
    parameters: {
      query: {
        refresh_token: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Health */
  health_v1_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get User By Id */
  get_user_by_id_v1_users__user_id__get: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Users */
  get_users_v1_users_get: {
    parameters: {
      query?: {
        show_location?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Location */
  update_user_location_v1_users_me_location_put: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLocation"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Current User */
  get_current_user_v1_users_me__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** Update Current User */
  update_current_user_v1_users_me_put: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Events For User */
  get_events_for_user_v1_external_events_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ExternalEvent"][];
        };
      };
    };
  };
}
